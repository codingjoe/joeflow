name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lint-command:
          - bandit -r . -x ./tests
          - black --check --diff .
          - flake8 .
          - isort --check-only --diff .
          - pydocstyle .
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: 'pip'
          cache-dependency-path: 'linter-requirements.txt'
      - run: python -m pip install -r linter-requirements.txt
      - run: ${{ matrix.lint-command }}

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - run: sudo apt install -y python3-enchant graphviz
      - run: python -m pip install sphinxcontrib-spelling
      - run: python -m pip install -e '.[docs]'
      - run: python -m sphinx -W -b spelling docs docs/_build

  dist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - run: python -m pip install --upgrade pip build wheel twine readme-renderer
      - run: python -m build --sdist --wheel
      - run: python -m twine check dist/*

  PyTest:
    needs:
      - dist
      - lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
        django-version:
          - "3.2"
          - "4.0"
          - "4.1"
        extras:
          - "test"
        include:
          - python-version: "3.x"
            django-version: "4.1"
            extras: "test,dramatiq"
          - python-version: "3.x"
            django-version: "4.1"
            extras: "test,celery"
          - python-version: "3.x"
            django-version: "4.1"
            extras: "test,reversion"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: sudo apt install -y graphviz redis-server
      - run: python -m pip install "django==${{ matrix.django-version }}.*"
      - run: python -m pip install -e .[${{ matrix.extras }}]
      - run: python -m pytest
      - uses: codecov/codecov-action@v3

  analyze:
    name: CodeQL
    needs: [ PyTest ]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ python ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          queries: +security-and-quality
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{ matrix.language }}"
